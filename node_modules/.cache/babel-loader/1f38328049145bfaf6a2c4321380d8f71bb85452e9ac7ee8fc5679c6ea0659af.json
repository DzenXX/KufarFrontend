{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const createPost = createAsyncThunk('post/createPost', async params => {\n  console.log(\"fetch\");\n  console.log(params);\n  const {\n    data\n  } = await axios.post('posts', params);\n  return data;\n});\nexport const fetchPosts = createAsyncThunk('post/fetchPosts', async params => {\n  console.log(\"fetch\");\n  const {\n    data\n  } = await axios.get('/posts');\n  console.log(data);\n  return data;\n});\nexport const fetchOnePost = createAsyncThunk('post/fetchOnePost', async params => {\n  console.log(params);\n  const {\n    data\n  } = await axios.get(`/posts/${params}`);\n  console.log(data);\n  return data;\n});\nexport const fetchPostsForUser = createAsyncThunk('post/fetchPostsForUser', async params => {\n  console.log(\"fetch\");\n  const {\n    data\n  } = await axios.get('/posts/personal');\n  console.log(data);\n  return data;\n});\nconst initialState = {\n  posts: [],\n  post: {},\n  searchValue: '',\n  status: 'loading'\n};\nconst postSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    changeSearchValue: (state, action) => {\n      state.searchValue = action.payload;\n    }\n  },\n  extraReducers: {\n    [fetchPosts.pending]: state => {\n      state.status = 'loading';\n      // state.posts = null;\n    },\n\n    [fetchPosts.fulfilled]: (state, action) => {\n      state.status = 'loaded';\n      console.log(action.payload);\n      state.posts = action.payload;\n      console.log(state.messages);\n    },\n    [fetchPosts.rejected]: state => {\n      state.status = 'error';\n      state.posts = null;\n    },\n    [fetchPostsForUser.pending]: state => {\n      state.status = 'loading';\n      // state.posts = null;\n    },\n\n    [fetchPostsForUser.fulfilled]: (state, action) => {\n      state.status = 'loaded';\n      console.log(action.payload);\n      state.posts = action.payload;\n      console.log(state.messages);\n    },\n    [fetchPostsForUser.rejected]: state => {\n      state.status = 'error';\n      state.posts = null;\n    },\n    [fetchOnePost.pending]: state => {\n      state.status = 'loading';\n      // state.posts = null;\n    },\n\n    [fetchOnePost.fulfilled]: (state, action) => {\n      state.status = 'loaded';\n      console.log(action.payload);\n      state.post = action.payload;\n      console.log(state.messages);\n    },\n    [fetchOnePost.rejected]: state => {\n      state.status = 'error';\n      state.post = null;\n    }\n  }\n});\nexport const selectPosts = state => state.post.posts;\nexport const selectSearchValue = state => state.post.searchValue;\nexport const {\n  changeSearchValue\n} = postSlice.actions;\nexport const postReducer = postSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","createPost","params","console","log","data","post","fetchPosts","get","fetchOnePost","fetchPostsForUser","initialState","posts","searchValue","status","postSlice","name","reducers","changeSearchValue","state","action","payload","extraReducers","pending","fulfilled","messages","rejected","selectPosts","selectSearchValue","actions","postReducer","reducer"],"sources":["/Users/tim/Documents/programming/kufar/KufarFrontend/KufarFrontend/src/redux/slices/post.jsx"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\n\nexport const createPost = createAsyncThunk('post/createPost', async (params) => {\n   console.log(\"fetch\")\n   console.log(params)\n   const { data } = await axios.post('posts', params)\n   return data;\n})\n\nexport const fetchPosts = createAsyncThunk('post/fetchPosts', async (params) => {\n   console.log(\"fetch\")\n   const { data } = await axios.get('/posts')\n   console.log(data)\n   return data;\n})\n\nexport const fetchOnePost = createAsyncThunk('post/fetchOnePost', async (params) => {\n   console.log(params)\n   const { data } = await axios.get(`/posts/${params}`)\n   console.log(data)\n   return data;\n})\n\nexport const fetchPostsForUser = createAsyncThunk('post/fetchPostsForUser', async (params) => {\n   console.log(\"fetch\")\n   const { data } = await axios.get('/posts/personal')\n   console.log(data)\n   return data;\n})\n\n\n\n\nconst initialState = {\n   posts: [],\n   post: {},\n   searchValue: '',\n   status: 'loading'\n}\n\n\nconst postSlice = createSlice({\n   name: 'chat',\n   initialState,\n   reducers: { \n   changeSearchValue: (state, action) => {\n      state.searchValue = action.payload\n   }\n   },\n   extraReducers: {\n      [fetchPosts.pending]: (state) => {\n         state.status = 'loading';\n         // state.posts = null;\n      },\n      [fetchPosts.fulfilled]: (state, action) => {\n         state.status = 'loaded';\n         console.log(action.payload)\n         state.posts = action.payload;\n         console.log(state.messages)\n      },\n      [fetchPosts.rejected]: (state) => {\n         state.status = 'error';\n         state.posts = null;\n      },\n      [fetchPostsForUser.pending]: (state) => {\n         state.status = 'loading';\n         // state.posts = null;\n      },\n      [fetchPostsForUser.fulfilled]: (state, action) => {\n         state.status = 'loaded';\n         console.log(action.payload)\n         state.posts = action.payload;\n         console.log(state.messages)\n      },\n      [fetchPostsForUser.rejected]: (state) => {\n         state.status = 'error';\n         state.posts = null;\n      },\n      [fetchOnePost.pending]: (state) => {\n         state.status = 'loading';\n         // state.posts = null;\n      },\n      [fetchOnePost.fulfilled]: (state, action) => {\n         state.status = 'loaded';\n         console.log(action.payload)\n         state.post = action.payload;\n         console.log(state.messages)\n      },\n      [fetchOnePost.rejected]: (state) => {\n         state.status = 'error';\n         state.post = null;\n      },\n   }\n});\n\nexport const selectPosts = (state) => state.post.posts\nexport const selectSearchValue = (state) => state.post.searchValue\n\nexport const { changeSearchValue } = postSlice.actions\n\nexport const postReducer = postSlice.reducer\n\n\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,UAAU,GAAGF,gBAAgB,CAAC,iBAAiB,EAAE,MAAOG,MAAM,IAAK;EAC7EC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpBD,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,OAAO,EAAEJ,MAAM,CAAC;EAClD,OAAOG,IAAI;AACd,CAAC,CAAC;AAEF,OAAO,MAAME,UAAU,GAAGR,gBAAgB,CAAC,iBAAiB,EAAE,MAAOG,MAAM,IAAK;EAC7EC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAML,KAAK,CAACQ,GAAG,CAAC,QAAQ,CAAC;EAC1CL,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACjB,OAAOA,IAAI;AACd,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAGV,gBAAgB,CAAC,mBAAmB,EAAE,MAAOG,MAAM,IAAK;EACjFC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;EACnB,MAAM;IAAEG;EAAK,CAAC,GAAG,MAAML,KAAK,CAACQ,GAAG,CAAE,UAASN,MAAO,EAAC,CAAC;EACpDC,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACjB,OAAOA,IAAI;AACd,CAAC,CAAC;AAEF,OAAO,MAAMK,iBAAiB,GAAGX,gBAAgB,CAAC,wBAAwB,EAAE,MAAOG,MAAM,IAAK;EAC3FC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;EACpB,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAML,KAAK,CAACQ,GAAG,CAAC,iBAAiB,CAAC;EACnDL,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;EACjB,OAAOA,IAAI;AACd,CAAC,CAAC;AAKF,MAAMM,YAAY,GAAG;EAClBC,KAAK,EAAE,EAAE;EACTN,IAAI,EAAE,CAAC,CAAC;EACRO,WAAW,EAAE,EAAE;EACfC,MAAM,EAAE;AACX,CAAC;AAGD,MAAMC,SAAS,GAAGjB,WAAW,CAAC;EAC3BkB,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACVC,iBAAiB,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACnCD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO;IACrC;EACA,CAAC;EACDC,aAAa,EAAE;IACZ,CAACf,UAAU,CAACgB,OAAO,GAAIJ,KAAK,IAAK;MAC9BA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxB;IACH,CAAC;;IACD,CAACP,UAAU,CAACiB,SAAS,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MACxCD,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBX,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BlB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACM,QAAQ,CAAC;IAC9B,CAAC;IACD,CAAClB,UAAU,CAACmB,QAAQ,GAAIP,KAAK,IAAK;MAC/BA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACP,KAAK,GAAG,IAAI;IACrB,CAAC;IACD,CAACF,iBAAiB,CAACa,OAAO,GAAIJ,KAAK,IAAK;MACrCA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxB;IACH,CAAC;;IACD,CAACJ,iBAAiB,CAACc,SAAS,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC/CD,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBX,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;MAC5BlB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACM,QAAQ,CAAC;IAC9B,CAAC;IACD,CAACf,iBAAiB,CAACgB,QAAQ,GAAIP,KAAK,IAAK;MACtCA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACP,KAAK,GAAG,IAAI;IACrB,CAAC;IACD,CAACH,YAAY,CAACc,OAAO,GAAIJ,KAAK,IAAK;MAChCA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxB;IACH,CAAC;;IACD,CAACL,YAAY,CAACe,SAAS,GAAG,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC1CD,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBX,OAAO,CAACC,GAAG,CAACgB,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACb,IAAI,GAAGc,MAAM,CAACC,OAAO;MAC3BlB,OAAO,CAACC,GAAG,CAACe,KAAK,CAACM,QAAQ,CAAC;IAC9B,CAAC;IACD,CAAChB,YAAY,CAACiB,QAAQ,GAAIP,KAAK,IAAK;MACjCA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACb,IAAI,GAAG,IAAI;IACpB;EACH;AACH,CAAC,CAAC;AAEF,OAAO,MAAMqB,WAAW,GAAIR,KAAK,IAAKA,KAAK,CAACb,IAAI,CAACM,KAAK;AACtD,OAAO,MAAMgB,iBAAiB,GAAIT,KAAK,IAAKA,KAAK,CAACb,IAAI,CAACO,WAAW;AAElE,OAAO,MAAM;EAAEK;AAAkB,CAAC,GAAGH,SAAS,CAACc,OAAO;AAEtD,OAAO,MAAMC,WAAW,GAAGf,SAAS,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}